@page "/minesweeper"
@rendermode InteractiveAuto

@using static BlazorWebApp.Client.Pages.Minesweeper;

<head>
    <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />
</head>

<h2>Minesweeper</h2>
<div class="d-flex pa-2 ma-2">

    <input type="range" min="4" max="40" @bind="_gridsize" />
    <p>Grid size: @_gridsize</p>

    <input type="range" min="1" max="@(_gridsize*_gridsize-1)" @bind="_mineAmount" />
    <p>Mines: @_mineAmount</p>

    <button class="btn btn-primary" @onclick="StartNewGame">New game</button>

    <div class="d-block">
        @if (_won)
        {
            <text>Time:</text>@_elapsedTime
        }
    </div>     

</div>

@if (_playing)
{      
    <div class="d-flex">
        <svg height="@_mapSize" width="@_mapSize">
            @for (int yIndex = 2; yIndex < _mapSize; yIndex += FieldSize)
            {
                int yPos = yIndex / FieldSize;
                @for (int xIndex = 2; xIndex < _mapSize; xIndex += FieldSize)
                {
                    int xPos = xIndex / FieldSize;
                    @if (_fields[xPos, yPos].Flagged)
                    {
                        <svg x="@xIndex" y="@yIndex" width="36" height="36" @oncontextmenu="FlagField" @oncontextmenu:preventDefault="true">
                        <foreignObject width="200%" height="200%">
                                <i class="material-symbols-outlined" style="color:red" ; font-size: 34px;>flag</i>
                        </foreignObject>
                        </svg>                                                                                     
                    }
                    else
                    {
                        @if (!_fields[xPos, yPos].Visible)
                        {
                            <rect x="@xIndex" y="@yIndex" rx="5 " ry="5" width="36" height="36" style="fill:gray"
                                @onclick="UncoverField" @oncontextmenu="FlagField" @oncontextmenu:preventDefault="true" />
                        }
                        else
                        {
                            <svg x="@xIndex" y="@yIndex" width="36" height="36">
                                <foreignObject width="100%" height="100%" style="align-content:stretch;justify-content:stretch">
                                    @switch (_fields[xPos, yPos].Value)
                                    {
                                        case 0:
                                            break;
                                        case 1:
                                            <i class="material-symbols-outlined" style="color:blue; font-size: 34px;">counter_1</i>
                                            break;
                                        case 2:
                                            <i class="material-symbols-outlined" style="color:green; font-size: 34px;">counter_2</i>
                                            break;
                                        case 3:
                                            <i class="material-symbols-outlined" style="color:red; font-size: 34px;">counter_3</i>
                                            break;
                                        case 4:
                                            <i class="material-symbols-outlined" style="color:saddlebrown; font-size: 34px;">counter_4</i>
                                            break;
                                        case 5:
                                            <i class="material-symbols-outlined" style="color:purple; font-size: 34px;">counter_5</i>
                                            break;
                                        case 6:
                                            <i class="material-symbols-outlined" style="color:darkcyan; font-size: 34px;">counter_6</i>
                                            break;
                                        case 7:
                                            <i class="material-symbols-outlined" style="color:darkolivegreen; font-size: 34px;">counter_7</i>
                                            break;
                                        case 8:
                                            <i class="material-symbols-outlined" style="color:darkslategray; font-size: 34px;">counter_8</i>
                                            break;
                                        default:
                                            @if (_won)
                                            {
                                                <i class="material-symbols-outlined" style="color:limegreen; font-size: 34px;">explosion</i>
                                            }
                                            else
                                            {
                                                <i class="material-symbols-outlined" style="color:red; font-size: 34px;">explosion</i>
                                            }
                                            break;
                                    }
                                </foreignObject>
                            </svg>                               
                        }
                    }
                }
            }
        </svg>    
    </div> 
}
